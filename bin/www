#!/usr/bin/env node

const app = require('../server');
const http = require('http');

const server = http.createServer(app);

/**
 * Normalizes a port into a number, string, or false.
 */
function normalizePort(val) {
    const port = parseInt(val, 10);

    if (isNaN(port))
        return port;

    if (port >= 0)
        return port;

    return false;
}

function onError(e) {
    if (e.syscall !== 'listen')
        throw e;

    const bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    switch (e.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
        default:
            throw e;
    }
}

function onListening() {
    const addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    console.log('Listening on ' + bind);
}

const host = process.env.HOST || '127.0.0.1';

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

server.listen(port, host);
server.on('error', onError);
server.on('listening', onListening);
